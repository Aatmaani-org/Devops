pipeline {
    agent any

    stages {
      stage('Cleaning the directory') {
        steps {
          sh 'rm -rf *'
        }
      }
      stage('Clone Production') {
        steps {
          git branch: 'main', url: 'https://github.com/Aatmaani-org/Production.git'
        }
      }
      stage('Build and push the image to ECR') {
        steps {
          sh '''
          cd /var/lib/jenkins/workspace/Sooraj/node-app
	  docker build -t new-nodejs --build-arg GIT_COMMIT=$(git log -1 --format=%h) .
          docker tag new-nodejs:latest 883195043912.dkr.ecr.us-west-2.amazonaws.com/new-nodejs:$(git log -1 --format=%h)
          docker tag new-nodejs:latest 883195043912.dkr.ecr.us-west-2.amazonaws.com/new-nodejs:node_demo
	  aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 883195043912.dkr.ecr.us-west-2.amazonaws.com
          docker push 883195043912.dkr.ecr.us-west-2.amazonaws.com/new-nodejs:$(git log -1 --format=%h)
          docker push 883195043912.dkr.ecr.us-west-2.amazonaws.com/new-nodejs:node_demo
          '''
        }
      }
      stage('Clone Devops') {
         steps {
           sh '''
           mkdir warnerdevops
           cd warnerdevops
           git clone https://github.com/Aatmaani-org/Devops.git
         '''  
         }
      }
      stage('Helm') {
         steps {
           sh '''
           cd /var/lib/jenkins/workspace/Sooraj/new-dev/warnerdevops/Devops/Sooraj/helm
           helm upgrade --install warnerbro warnerbros -n dev -f values-dev.yaml
           '''
         }
      }
    }
    post {
      failure {
        slackSend channel: ' project-team', message: 'job failed'
      }
      success {
        slackSend channel: ' project-team', message: 'job Success'
      }
    }
}
